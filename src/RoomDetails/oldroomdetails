// const roomImages = roomDetails.rooms.room_images;
// 	let room = roomDetails.rooms.room_number;
// 	const category_name = roomDetails.category_name;
// 	//console.log(category_name);

// 	const [isRoomAvailable, setIsRoomAvailable] = useState(true);
// 	const [availabilityError, setAvailabilityError] = useState("");
// 	const [roomCount, setRoomCount] = useState(room);
// 	console.log(roomCount);
// 	// const [userRoomCount, setUserRoomCount] = useState(0);
// 	//console.log(userRoomCount);
// 	const [minCheckInDate, setMinCheckInDate] = useState("");
// 	const [minCheckOutDate, setMinCheckOutDate] = useState("");
// 	const [priceof, setPriceOf] = useState(roomDetails.rooms.price);
// 	//const [existingBookings, setExistingBookings] = useState([]);

// 	useEffect(() => {
// 		const now = moment().format("YYYY-MM-DD");
// 		setMinCheckInDate(now);
// 	}, []);

// 	// useEffect(() => {
// 	// 	fetch(`http://localhost:3000/booking/${category_name}`)
// 	// 		.then((res) => res.json())
// 	// 		.then((data) => setExistingBookings(data));
// 	// }, [category_name]);

// 	const handleCheckInDateChange = async (e) => {
// 		const selectedDate = e.target.value;
// 		const CheckOutDate = moment(selectedDate)
// 			.add(1, "days")
// 			.format("YYYY-MM-DD");
// 		setMinCheckOutDate(CheckOutDate);
// 		try {
// 			const response = await fetch(
// 				`http://localhost:3000/booking/${category_name}?checkInDate=${selectedDate}`
// 			);
// 			if (!response.ok) throw new Error("Server response not OK");
// 			const availabilityData = await response.json();

// 			// Update room availability based on the server's response
// 			if (availabilityData.isUnavailable) {
// 				setIsRoomAvailable(false);
// 				setAvailabilityError(
// 					"No available rooms for the selected date range."
// 				);
// 				setRoomCount(0); // If not available, set room count to 0
// 			} else {
// 				setIsRoomAvailable(true);
// 				setAvailabilityError("");
// 				setRoomCount(availabilityData.availableRooms); // Update the room count to the number of available rooms
// 			}
// 		} catch (error) {
// 			console.error(
// 				"There was an error fetching the booking data:",
// 				error
// 			);
// 		}
// 	};

// 	// booking posting to server
// 	const handleConfirmBooking = async (e) => {
// 		e.preventDefault(); // Prevent the default form submit action

// 		const form = e.target;
// 		const checkIn = form.Check_in_Date.value;
// 		const checkOut = form.Check_out_Date.value;
// 		const room_number = parseInt(form.userRoom.value, 10);
// 		const category_name = form.name.value;
// 		const price = form.price.value;

// 		// Check if the user has selected more rooms than available
// 		if (room_number > roomCount) {
// 			Swal.fire({
// 				title: "Error!",
// 				text: "You cannot book more rooms than are available.",
// 				icon: "error",
// 			});
// 			return;
// 		}

// 		// Construct the booking object
// 		const newBooking = {
// 			email: email,
// 			category_name: category_name,
// 			checkIn: checkIn,
// 			checkOut: checkOut,
// 			room_number: room_number,
// 			price: price,
// 		};

// 		// Now, let's send the booking to the server
// 		try {
// 			const response = await fetch("http://localhost:3000/bookings", {
// 				method: "POST",
// 				headers: {
// 					"Content-Type": "application/json",
// 				},
// 				body: JSON.stringify(newBooking),
// 			});

// 			if (!response.ok) {
// 				throw new Error("Server response not OK");
// 			}

// 			const data = await response.json();

// 			if (data.success) {
// 				// Update the room count state to reflect the booked rooms
// 				setRoomCount((previousCount) => previousCount - room_number);

// 				// Reset the form if needed and display success message
// 				form.reset();
// 				Swal.fire({
// 					title: "Success!",
// 					text: "Your booking has been successfully added.",
// 					icon: "success",
// 					confirmButtonText: "Great!",
// 				});
// 			} else {
// 				// Handle any server-side validation errors
// 				Swal.fire({
// 					title: "Booking Failed",
// 					text: data.message || "Could not complete your booking.",
// 					icon: "error",
// 				});
// 			}
// 		} catch (error) {
// 			// Handle any network errors
// 			console.error("Booking error:", error);
// 			Swal.fire({
// 				title: "Error!",
// 				text: "There was a problem processing your booking.",
// 				icon: "error",
// 			});
// 		}
// 	};

// 	// confirming with modal
// 	const handleConfirmButtonClick = () => {
// 		// Manually submit the form
// 		const form = document.getElementById("bookingForm");
// 		form.submit();
// 	};

// 	const handleBookNowClick = () => {
// 		if (isRoomAvailable) {
// 			document.getElementById("my_modal_1").showModal();
// 		} else {
// 			Swal.fire({
// 				title: "Unavailable",
// 				text: "No rooms are available for the selected date.",
// 				icon: "error",
// 			});
// 		}
// 	};